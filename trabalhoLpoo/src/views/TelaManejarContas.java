/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controller.DataController;
import entidades.*;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import utils.Filter;
import javax.swing.text.PlainDocument;

/**
 *
 * @author Vitor
 */
public class TelaManejarContas extends javax.swing.JFrame {
    public DataController dadosSigilosos;
    
    public List<Cliente> clientes;
    public List<ContaInvestimento> contasInvestimento;
    public List<ContaCorrente> contasCorrente;
    public ContaInvestimento contaInvestimento;
    public ContaCorrente contaCorrente;
    public String tipo = "";
    public int index;
    /**
     * Creates new form TelaManejarContas
     */
    public TelaManejarContas() {
        initComponents();
        dadosSigilosos = DataController.getInstance();
        clientes = dadosSigilosos.getClientesList();
        contasInvestimento = dadosSigilosos.getContaInvestimentoList();
        contasCorrente = dadosSigilosos.getContaCorrenteList();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textoCpf = new javax.swing.JTextField();
        encontrarClientes = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        campoSacar = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        botaoSaque = new javax.swing.JButton();
        campoDeposita = new javax.swing.JTextField();
        botaoDeposito = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        botaoSaldo = new javax.swing.JButton();
        botaoRemunera = new javax.swing.JButton();
        labelSaldo = new javax.swing.JLabel();
        voltarBotao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel1.setText("HalfJComp Banking co.");

        jLabel2.setText("CPF cliente");

        textoCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoCpfActionPerformed(evt);
            }
        });

        encontrarClientes.setText("Encontrar Cliente");
        encontrarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encontrarClientesActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel3.setText("Ações sobre a conta");

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setText("Sacar");

        panel.add(campoSacar);
        PlainDocument newSacar = (PlainDocument) campoSacar.getDocument();
        newSacar.setDocumentFilter(new Filter());
        campoSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoSacarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel6.setText("Deposito");

        botaoSaque.setText("Efetuar Saque");
        botaoSaque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSaqueActionPerformed(evt);
            }
        });

        panel.add(campoDeposita);
        PlainDocument newDeposito = (PlainDocument) campoDeposita.getDocument();
        newDeposito.setDocumentFilter(new Filter());
        campoDeposita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDepositaActionPerformed(evt);
            }
        });

        botaoDeposito.setText("Efetuar Deposito");
        botaoDeposito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDepositoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoSacar)
                    .addComponent(botaoSaque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campoDeposita, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(botaoDeposito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoSacar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoSaque)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoDeposita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoDeposito)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));

        botaoSaldo.setText("Ver Saldo");
        botaoSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSaldoActionPerformed(evt);
            }
        });

        botaoRemunera.setText("Remunera");
        botaoRemunera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemuneraActionPerformed(evt);
            }
        });

        labelSaldo.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        labelSaldo.setText("R$ 0,00");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoRemunera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(labelSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 9, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoRemunera, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        voltarBotao.setText("Voltar");
        voltarBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarBotaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(voltarBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(encontrarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(textoCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(161, 161, 161))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(115, 115, 115)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(246, 246, 246))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(184, 184, 184))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(voltarBotao))
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(encontrarClientes)
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void textoCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoCpfActionPerformed

    private void campoSacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoSacarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoSacarActionPerformed

    private void botaoSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSaldoActionPerformed
        if(this.tipo.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Por favor, digite o CPF do cliente", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String saldo;
        switch(tipo){
            case "Investimento":
                saldo = "R$ " + contaInvestimento.getSaldo();
                labelSaldo.setText(saldo);
                break;
            case "Corrente":
                saldo = "R$ " + contaCorrente.getSaldo();
                labelSaldo.setText(saldo);
                break;
        }
    }//GEN-LAST:event_botaoSaldoActionPerformed

    private void voltarBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarBotaoActionPerformed
        dadosSigilosos.setContasCorrente(contasCorrente);
        dadosSigilosos.setContasInvestimento(contasInvestimento);
        JFrameTelaInicial tela = new JFrameTelaInicial();
        tela.setVisible(true);
        dispose();
    }//GEN-LAST:event_voltarBotaoActionPerformed

    private void encontrarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encontrarClientesActionPerformed
        System.out.println("Text CPF:" + textoCpf.getText());
        if(textoCpf.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Campo inválido", "Erro", JOptionPane.ERROR_MESSAGE); 
            return;
        } 
        
        if(dadosSigilosos.getClientByCPF(textoCpf.getText()) == false) {
            JOptionPane.showMessageDialog(rootPane, "Cliente não encontrado", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        } 

        for (ContaInvestimento account : contasInvestimento){
            if(account.getDono().getCpf().equals(textoCpf.getText())){
                contaInvestimento = account;
                this.tipo = "Investimento";
                JOptionPane.showMessageDialog(null, "Cliente encontrado com sucesso", "Success", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }

        for (ContaCorrente account : contasCorrente){
            if(account.getDono().getCpf().equals(textoCpf.getText())){
                contaCorrente = account;
                this.tipo = "Corrente";
                JOptionPane.showMessageDialog(null, "Cliente encontrado com sucesso", "Success", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }

        if (this.tipo.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Cliente não esta vinculado a uma conta", "Erro", JOptionPane.ERROR_MESSAGE);
        }
      
    }//GEN-LAST:event_encontrarClientesActionPerformed

   
    
    private void botaoSaqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSaqueActionPerformed
         if(this.tipo.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Por favor, digite o CPF do cliente", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        boolean deuCerto;
        switch(tipo){
            case "Investimento":
                try {
                    index = contasInvestimento.indexOf(contaInvestimento);
                    String valorSaqueRaw = campoSacar.getText();
                    double valorSaque = Double.parseDouble(valorSaqueRaw);
                    deuCerto = contaInvestimento.saca(valorSaque);
                    if (deuCerto){
                        JOptionPane.showMessageDialog(null, "Saque realizado com sucesso", "Sucesso",  JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Erro ao efetuar o Saque", "Erro",  JOptionPane.OK_OPTION);
                    }
                    contasInvestimento.set(index, contaInvestimento);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao efetuar o Saque", "Erro", JOptionPane.ERROR_MESSAGE);
                }
                break;
            case "Corrente":
                try {
                    index = contasCorrente.indexOf(contaCorrente);
                    String valorSaqueRaw = campoSacar.getText();
                    double valorSaque = Double.parseDouble(valorSaqueRaw);
                    deuCerto = contaCorrente.saca(valorSaque);
                    contasCorrente.set(index, contaCorrente);
                    if (deuCerto){
                        JOptionPane.showMessageDialog(null, "Saque realizado com sucesso", "Sucesso",  JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Erro ao efetuar o Saque", "Erro",  JOptionPane.OK_OPTION);
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao efetuar o Saque", "Erro", JOptionPane.ERROR_MESSAGE);
                }
                break;
        }
    }//GEN-LAST:event_botaoSaqueActionPerformed

    private void botaoDepositoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDepositoActionPerformed
         if(this.tipo.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Por favor, digite o CPF do cliente", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        boolean deuCerto;
        System.out.println("Tipo: " + tipo);
        switch(tipo){
            case "Investimento":
                try {
                    index = contasInvestimento.indexOf(contaInvestimento);
                    String valorDepositaRaw = campoDeposita.getText();
                    double valorDeposita = Double.parseDouble(valorDepositaRaw);
                    if (contaInvestimento.depositoMinimo > valorDeposita) {
                        JOptionPane.showMessageDialog(null, "Não foi possível depositar, o depósito mínimo para essa conta é: " + contaInvestimento.depositoMinimo, "Success", JOptionPane.INFORMATION_MESSAGE);
                        break;
                    }
                    deuCerto = contaInvestimento.deposita(valorDeposita);
                    contasInvestimento.set(index, contaInvestimento);
                    if (deuCerto) {
                        JOptionPane.showMessageDialog(null, "Valor adicionado na conta com sucesso", "Success", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao efetuar o deposito", "Erro", JOptionPane.ERROR_MESSAGE);
                }
                break;
            case "Corrente":
                try {
                    index = contasCorrente.indexOf(contaCorrente);
                    String valorDepositaRaw = campoDeposita.getText();
                    double valorDeposita = Double.parseDouble(valorDepositaRaw);
                    deuCerto = contaCorrente.deposita(valorDeposita);
                    if (deuCerto) {
                        JOptionPane.showMessageDialog(null, "Valor adicionado na conta com sucesso", "Success", JOptionPane.INFORMATION_MESSAGE);
                        contasCorrente.set(index, contaCorrente);
                    }else {
                        throw new Exception();
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao efetuar o deposito", "Erro", JOptionPane.ERROR_MESSAGE);
                }
                break;
        }
    }//GEN-LAST:event_botaoDepositoActionPerformed

    private void botaoRemuneraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemuneraActionPerformed
         if(this.tipo.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Por favor, digite o CPF do cliente", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        switch(tipo){
            case "Investimento":
                try {
                    index = contasInvestimento.indexOf(contaInvestimento);
                    contaInvestimento.remunera();
                    contasInvestimento.set(index, contaInvestimento);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao efetuar o remunera", "Erro", JOptionPane.ERROR_MESSAGE);
                }
                break;
            case "Corrente":
                try {
                    index = contasCorrente.indexOf(contaCorrente);
                    contaCorrente.remunera(); 
                    contasCorrente.set(index, contaCorrente);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao efetuar o remunera", "Erro", JOptionPane.ERROR_MESSAGE);
                }
                break;
        }
    }//GEN-LAST:event_botaoRemuneraActionPerformed

    private void campoDepositaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDepositaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDepositaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaManejarContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaManejarContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaManejarContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaManejarContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaManejarContas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoDeposito;
    private javax.swing.JButton botaoRemunera;
    private javax.swing.JButton botaoSaldo;
    private javax.swing.JButton botaoSaque;
    private javax.swing.JTextField campoDeposita;
    JPanel panel = new JPanel();
    private javax.swing.JTextField campoSacar;
    private javax.swing.JButton encontrarClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelSaldo;
    private javax.swing.JTextField textoCpf;
    private javax.swing.JButton voltarBotao;
    // End of variables declaration//GEN-END:variables
}
